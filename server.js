// ุงุณุชุฏุนุงุก ููุชุจุฉ ุฅูุณุจุฑูุณ ูุชุดุบูู ุงูุณูุฑูุฑ
const express = require('express');
const app = express();
// ุงุณุชุฏุนุงุก ููุชุจุฉ Mongoose ูุฑุจุท ุงูุชุทุจูู ูุน MongoDB
const mongoose = require('mongoose');
// ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู ููู .env
require('dotenv').config();
// ุงุณุชุฏุนุงุก ููุชุจุฉ cors
const cors = require('cors');
// ุงุณุชุฏุนุงุก ููุชุจุฉ helmet ูุชุนุฒูุฒ ุฃูุงู ุงูุชุทุจูู
const helmet = require('helmet');
const fs = require('fs');

// ุชูุนูู CORS ูุน ุงูุณูุงุญ ููุฏุงุดุจูุฑุฏ ูุฃู ุฏูููู ุขุฎุฑ (ููุจ ุฃู ููุจุงูู)
app.use(cors({
  origin: function (origin, callback) {
    // ุงูุณูุงุญ ููุฏุงุดุจูุฑุฏ ุจุดูู ุตุฑูุญ ูุฃู origin ุขุฎุฑ (ููููุจุงูู ูุบูุฑู)
    const dashboard = 'https://manegmentvett-zeta.vercel.app';
    if (!origin || origin === dashboard) {
      return callback(null, true);
    }
    // ุงูุณูุงุญ ูุฃู origin ุขุฎุฑ (ููุจุงูู ูุบูุฑู)
    return callback(null, true);
  },
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'x-access-token', 'Origin', 'Accept'],
}));
// ุชูุนูู Helmet
app.use(helmet());

// ุงุณุชุฏุนุงุก ุงููููุงุช ุงูุฎุงุตุฉ ุจุงููุณุงุฑุงุช
const userRoutes = require('./routes/userRoute');
const courseRoutes = require('./routes/courseRoutes');
const videoRoutes = require('./routes/videoRoutes');
const subscriptionRoutes = require('./routes/subscriptionRoutes');
const notificationRoutes = require('./routes/notificationRoutes');
const adminRoutes = require('./routes/adminRoutes');
const authMiddleware = require('./middleware/authMiddleware');
const playerRoutes = require('./routes/playerRoutes');
const settingsRoutes = require('./routes/settingsRoutes');
const materialRoutes = require('./routes/materialRoutes');
const authRoutes = require('./routes/authRoute'); // โ ุงุณุชุฏุนุงุก ูุณุงุฑ ุงููุตุงุฏูุฉ

// ุงุณุชุฏุนุงุก Middleware ููุนุงูุฌุฉ ุงูุฃุฎุทุงุก
const errorMiddleware = require('./middleware/errorHandler');

// ุชูููู ุงุณุชูุจุงู ุงูุจูุงูุงุช ุจุตูุบุฉ JSON ูู ุงูุทูุจุงุช
app.use(express.json());

// โ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB
const connectDB = async () => {
    try {
        await mongoose.connect(process.env.MONGO_URI, {
            serverSelectionTimeoutMS: 5000, // ุฅุฐุง ูู ูุชู ุงูุงุชุตุงู ุฎูุงู 5 ุซูุงููุ ูุชู ุงูุฅููุงุก
            family: 4 // ูุฌุจุฑ ุงูุงุชุตุงู ุนูู ุงุณุชุฎุฏุงู IPv4 ุจุฏููุง ูู IPv6
        });

        console.log("โ MongoDB Connected Successfully!");
    } catch (error) {
        console.error("โ MongoDB Connection Error:", error);
        process.exit(1); // ุฅููุงุก ุงูุชุทุจูู ุฅุฐุง ูุดู ุงูุงุชุตุงู
    }
};

// ุชูููุฐ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
connectDB();

// ุชูููู ุฎุฏูุฉ ุงููููุงุช ุงูุซุงุจุชุฉ (Static) ููููุงุช ุงูุฑูุน
app.use('/uploads', express.static('uploads'));

// Middleware ูุฎุฏูุฉ ูููุงุช PDF ูุน ุชุนููู Content-Type
app.use('/uploads/pdfs', (req, res, next) => {
  res.setHeader('Content-Type', 'application/pdf');
  next();
});

// โ ุฅุนุฏุงุฏ ุงููุณุงุฑุงุช
app.use('/api/users', userRoutes);
app.use('/api/courses', courseRoutes); // ูุณุงุฑุงุช ุงูููุฑุณุงุช
app.use('/api/videos', videoRoutes);
app.use('/api/subscriptions', subscriptionRoutes);
app.use('/api/notifications', notificationRoutes);
app.use('/api/admin', authMiddleware, adminRoutes); // ูุณุงุฑุงุช ุงูุฅุฏุงุฑุฉ
app.use('/api/materials', materialRoutes);
app.use('/api/player', playerRoutes);
app.use('/api/settings', settingsRoutes);
app.use('/api/auth', authRoutes); // โ ุชู ุชุตุญูุญ ุงููุณุงุฑ

// Middleware ููุนุงูุฌุฉ ุงูุฃุฎุทุงุก
app.use(errorMiddleware);

// ุฅูุดุงุก ุฌููุน ูุฌูุฏุงุช ุงูุฑูุน ุชููุงุฆููุง ุนูุฏ ุชุดุบูู ุงูุณูุฑูุฑ
['uploads', 'uploads/images', 'uploads/videos', 'uploads/pdfs', 'uploads/others'].forEach(dir => {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }
});

// โ ุชุดุบูู ุงูุณูุฑูุฑ
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`๐ Server is running on http://localhost:${PORT}`);
});

//Eng-Amglous Rezq
// ๐๏ธ ูุฒููุฑ 27:1 ๐๏ธ
// "ูฑูุฑููุจูู ูููุฑูู ููุฎูููุงุตููุ ููููููู ุฃูุฎูุงููุ ูฑูุฑููุจูู ุญูุตููู ุญูููุงุชููุ ููููููู ุฃูุฑูุชูุนูุจูุ"
